{ns     acl-box.operations
 import #{aidbox.rest.acl
          acl-box.acl}

 patient-filter
 {:zen/tags     #{aidbox.rest.acl/filter}
  :filter-table acl-box.acl/acl-table
  :expression   [:and acl-box.acl/user-condition
                 acl-box.acl/id-conditon]}

 patient-create-filter
 {:zen/tags     #{aidbox.rest.acl/filter}
  :filter-table acl-box.acl/acl-table
  :expression   [:and acl-box.acl/user-condition
                 acl-box.acl/id-conditon]}

 read-patient
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/read
  :resource "Patient"
  :format   "fhir"
  :filter   patient-filter}

 search-patient
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/search
  :resource "Patient"
  :format   "fhir"
  :filter   patient-filter}

 update-patient
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/update
  :resource "Patient"
  :format   "fhir"
  :filter   patient-filter}

 insert-into-filter-table
 {:zen/tags     #{aidbox.rest.acl/filter-table-insert}
  :engine       aidbox.rest.acl/filter-table-insert-row-sql
  :filter-table acl-box.acl/acl-table
  :params       {:user-id acl-box.acl/user-id-param}
  :values       {:id       "gen_random_uuid()"
                 :txid     "nextval('transaction_id_seq'::text)"
                 :status "'created'"
                 :resource "jsonb_build_object('patient', jsonb_build_object('resourceType', 'Patient',
                                                                             'id', {{target-id}}::text),
                                               'user', jsonb_build_object('resourceType', 'User',
                                                                             'id', {{params.user-id}}::text))"}}
 create-patient
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/create-with-filter-table-insert
  :resource "Patient"
  :format   "fhir"
  :filter   patient-filter
  :filter-table-insert insert-into-filter-table}

 observation-filter
 {:zen/tags     #{aidbox.rest.acl/filter}
  :filter-table acl-box.acl/acl-table
  :expression   [:and acl-box.acl/user-condition
                 acl-box.acl/subject-conditon]}

 read-observation
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/read
  :resource "Observation"
  :format   "fhir"
  :filter   observation-filter}

 search-observation
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/search
  :resource "Observation"
  :format   "fhir"
  :filter   observation-filter}

 create-observation
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/create
  :resource "Observation"
  :format   "fhir"
  :filter   observation-filter}

 update-observation
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/update
  :resource "Observation"
  :format   "fhir"
  :filter   observation-filter}

 delete-observation
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.acl/delete
  :resource "Observation"
  :format   "fhir"
  :filter   observation-filter}}
