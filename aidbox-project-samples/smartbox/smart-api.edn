{ns smartbox.smart-api
 import #{aidbox.auth
          aidbox.rest
          aidbox.rest.smart
          aidbox.rest.acl
          aidbox.rest.v1
          smartbox.documentation
          smartbox.inferno-demo


          }

 ;; FIXME: auth module hack
  grant-lookup-method
 {:zen/tags #{aidbox.auth/grant-lookup}
  :method   aidbox.auth/single-patient-grant-lookup}

 oauth-middleware
 {:zen/tags #{aidbox.rest/middleware
              smartbox.documentation/operation-response}
  :engine aidbox.rest.smart/oauth-middleware
  :response [smartbox.documentation/response-unauthorized
             smartbox.documentation/response-access-denied]}

  grant-view
 {:zen/tags #{aidbox.rest/op}
  :engine   aidbox.rest.smart/aidbox-action
  :action   :auth/grant-view-v2}

 ;; FIXME: why it doesn't raise an error because of zen/tag absence
 smart-api
 {:zen/tags #{aidbox.rest/api}
  :middlewares         [oauth-middleware]
  "Patient"            {:apis #{patient-api}}
  "AllergyIntolerance" {:apis #{allergy-intolerance-api}}
  "CarePlan"           {:apis #{care-plan-api}}
  "CareTeam"           {:apis #{care-team-api}}
  "Condition"          {:apis #{condition-api}}
  "Device"             {:apis #{device-api}}
  "DiagnosticReport"   {:apis #{diagnostic-report-api}}
  "DocumentReference"  {:apis #{document-reference-api}}
  "Goal"               {:apis #{goal-api}}
  "Encounter"          {:apis #{encounter-api}}
  "Immunization"       {:apis #{immunization-api}}
  "MedicationRequest"  {:apis #{medication-request-api}}
  "Observation"        {:apis #{observation-api}}
  "Organization"       {:apis #{organization-api}}
  "Practitioner"       {:apis #{practitioner-api}}
  "Procedure"          {:apis #{procedure-api}}
  "Provenance"         {:apis #{provenance-api}}
  "Location"           {:apis #{location-api}}}


 legacy-public-api
 {:zen/tags #{aidbox.rest/api}
  :zen/desc "Don't remove since we shared those links"
  "api"                   {:GET {:engine aidbox.rest.v1/static-response
                                 :status 301
                                 :headers {"location" "/documentation"}}}
  "demo"                  {"login"   {:GET {:engine aidbox.rest.v1/static-response
                                            :status 301
                                            :headers {"location" "/"}}}
                           "profile" {:GET {:engine aidbox.rest.v1/static-response
                                            :status 301
                                            :headers {"location" "/inferno"}}}}}

 public-api
 {:zen/tags #{aidbox.rest/api}
  "ui"                    {:GET smartbox-ui} ;; FIXME: remove it
  ".well-known"           {"smart-configuration" {:GET smart-configuration-op}}
  "metadata"              {:GET capability-op}
  "style-v1.json"         {:GET style-smart-op}}

 ;; Conditions & Filters
 patient-conditon
 {:zen/tags #{aidbox.rest.acl/sql-template}
  :params   {:pid param-patient-id}
  :template "{{target-resource}}#>>'{patient, id}' = {{params.pid}}"}

 patient-filter
 {:zen/tags   #{aidbox.rest.acl/filter}
  :expression patient-conditon}

 subject-conditon
 {:zen/tags #{aidbox.rest.acl/sql-template}
  :params   {:pid param-patient-id}
  :template "{{target-resource}}#>>'{subject, id}' = {{params.pid}}"}

 subject-filter
 {:zen/tags   #{aidbox.rest.acl/filter}
  :expression subject-conditon}

 patient-resource-conditon
 {:zen/tags #{aidbox.rest.acl/sql-template}
  :params   {:pid param-patient-id}
  :template "{{target-id}} = {{params.pid}}"}

 patient-resource-filter
 {:zen/tags   #{aidbox.rest.acl/filter}
  :expression patient-resource-conditon}

 ;; Patient id parameter
 param-patient-id
 {:zen/tags      #{aidbox.rest.acl/request-param}
  :source-schema {:type zen/string}
  :path          [:on-behalf :fhirUser :id]}

 patient-api
 {:zen/tags #{aidbox.rest/api}
  :GET      patient-search
  "_search" {:POST patient-search}
  [:id]     {:GET patient-read}}

 patient-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Patient"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Patient.read" "patient/*.read" "patient/Patient.read"}
  :filter   patient-resource-filter}

 patient-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Patient"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Patient.read" "patient/*.read" "patient/Patient.read"}
  :filter   patient-resource-filter}

 ;; AllergyIntolerance
 allergy-intolerance-api
 {:zen/tags #{aidbox.rest/api}
  :GET      allergy-intolerance-search
  "_search" {:POST allergy-intolerance-search}
  [:id]     {:GET allergy-intolerance-read}}

 allergy-intolerance-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "AllergyIntolerance"
  :format   "fhir"
  :scope    #{"user/*.read" "user/AllergyIntolerance.read" "patient/*.read" "patient/AllergyIntolerance.read"}
  :filter   patient-filter}

 allergy-intolerance-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "AllergyIntolerance"
  :format   "fhir"
  :scope    #{"user/*.read" "user/AllergyIntolerance.read" "patient/*.read" "patient/AllergyIntolerance.read"}
  :filter   patient-filter}

 ;; CarePlan
 care-plan-api
 {:zen/tags #{aidbox.rest/api}
  :GET      care-plan-search
  "_search" {:POST care-plan-search}
  [:id]     {:GET care-plan-read}}

 care-plan-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "CarePlan"
  :format   "fhir"
  :scope    #{"user/*.read" "user/CarePlan.read" "patient/*.read" "patient/CarePlan.read"}
  :filter   subject-filter}

 care-plan-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "CarePlan"
  :format   "fhir"
  :scope    #{"user/*.read" "user/CarePlan.read" "patient/*.read" "patient/CarePlan.read"}
  :filter   subject-filter}

 ;; CareTeam
 care-team-api
 {:zen/tags #{aidbox.rest/api}
  :GET      care-team-search
  "_search" {:POST care-team-search}
  [:id]     {:GET care-team-read}}

 care-team-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "CareTeam"
  :format   "fhir"
  :scope    #{"user/*.read" "user/CareTeam.read" "patient/*.read" "patient/CareTeam.read"}
  :filter   subject-filter}

 care-team-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "CareTeam"
  :format   "fhir"
  :scope    #{"user/*.read" "user/CareTeam.read" "patient/*.read" "patient/CareTeam.read"}
  :filter   subject-filter}

 ;; Condition
 condition-api
 {:zen/tags #{aidbox.rest/api}
  :GET      condition-search
  "_search" {:POST condition-search}
  [:id]     {:GET condition-read}}

 condition-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Condition"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Condition.read" "patient/*.read" "patient/Condition.read"}
  :filter   subject-filter}

 condition-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Condition"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Condition.read" "patient/*.read" "patient/Condition.read"}
  :filter   subject-filter}

 ;; Device
 device-api
 {:zen/tags #{aidbox.rest/api}
  :GET      device-search
  "_search" {:POST device-search}
  [:id]     {:GET device-read}}

 device-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Device"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Device.read" "patient/*.read" "patient/Device.read"}
  :filter   patient-filter}

 device-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Device"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Device.read" "patient/*.read" "patient/Device.read"}
  :filter   patient-filter}

 ;; DiagnosticReport
 diagnostic-report-api
 {:zen/tags #{aidbox.rest/api}
  :GET      diagnostic-report-search
  "_search" {:POST diagnostic-report-search}
  [:id]     {:GET diagnostic-report-read}}

 diagnostic-report-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "DiagnosticReport"
  :format   "fhir"
  :scope    #{"user/*.read" "user/DiagnosticReport.read" "patient/*.read" "patient/DiagnosticReport.read"}
  :filter   subject-filter}

 diagnostic-report-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "DiagnosticReport"
  :format   "fhir"
  :scope    #{"user/*.read" "user/DiagnosticReport.read" "patient/*.read" "patient/DiagnosticReport.read"}
  :filter   subject-filter}

 ;; DocumentReference
 document-reference-api
 {:zen/tags #{aidbox.rest/api}
  "$docref" {:GET  document-reference-docref
             :POST document-reference-docref}
  :GET      document-reference-search
  "_search" {:POST document-reference-search}
  [:id]     {:GET document-reference-read}}

 document-reference-docref
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "This operation is used to return all the references to documents related to a patient"
  :engine   aidbox.rest.smart/aidbox-action
  :action   :box.rest.smart/document-reference-docref
  :scope    #{"user/*.read"
              "user/DocumentReference.read"
              "patient/*.read"
              "patient/DocumentReference.read"}}

 document-reference-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "DocumentReference"
  :format   "fhir"
  :scope    #{"user/*.read" "user/DocumentReference.read" "patient/*.read" "patient/DocumentReference.read"}
  :filter   subject-filter}

 document-reference-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "DocumentReference"
  :format   "fhir"
  :scope    #{"user/*.read" "user/DocumentReference.read" "patient/*.read" "patient/DocumentReference.read"}
  :filter   subject-filter}

 ;; Goal
 goal-api
 {:zen/tags #{aidbox.rest/api}
  :GET      goal-search
  "_search" {:POST goal-search}
  [:id]     {:GET goal-read}}

 goal-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Goal"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Goal.read" "patient/*.read" "patient/Goal.read"}
  :filter   subject-filter}

 goal-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Goal"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Goal.read" "patient/*.read" "patient/Goal.read"}
  :filter   subject-filter}

 ;; Encounter
 encounter-api
 {:zen/tags #{aidbox.rest/api}
  :GET      encounter-search
  "_search" {:POST encounter-search}
  [:id]     {:GET encounter-read}}

 encounter-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Encounter"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Encounter.read" "patient/*.read" "patient/Encounter.read"}
  :filter   subject-filter}

 encounter-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Encounter"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Encounter.read" "patient/*.read" "patient/Encounter.read"}
  :filter   subject-filter}

 ;; Immunization
 immunization-api
 {:zen/tags #{aidbox.rest/api}
  :GET      immunization-search
  "_search" {:POST immunization-search}
  [:id]     {:GET immunization-read}}

 immunization-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Immunization"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Immunization.read" "patient/*.read" "patient/Immunization.read"}
  :filter   patient-filter}

 immunization-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Immunization"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Immunization.read" "patient/*.read" "patient/Immunization.read"}
  :filter   patient-filter}

 ;; MedicationRequest
 medication-request-api
 {:zen/tags #{aidbox.rest/api}
  :GET      medication-request-search
  "_search" {:POST medication-request-search}
  [:id]     {:GET medication-request-read}}

 medication-request-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "MedicationRequest"
  :format   "fhir"
  :scope    #{"user/*.read" "user/MedicationRequest.read" "patient/*.read" "patient/MedicationRequest.read"}
  :filter   subject-filter}

 medication-request-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "MedicationRequest"
  :format   "fhir"
  :scope    #{"user/*.read" "user/MedicationRequest.read" "patient/*.read" "patient/MedicationRequest.read"}
  :filter   subject-filter}

 ;; Observation
 observation-api
 {:zen/tags #{aidbox.rest/api}
  :GET      observation-search
  "_search" {:POST observation-search}
  [:id]     {:GET observation-read}}

 observation-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Observation"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Observation.read" "patient/*.read" "patient/Observation.read"}
  :filter   subject-filter}

 observation-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Observation"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Observation.read" "patient/*.read" "patient/Observation.read"}
  :filter   subject-filter}

 ;; Organization
 organization-api
 {:zen/tags #{aidbox.rest/api}
  :GET      organization-search
  "_search" {:POST organization-search}
  [:id]     {:GET organization-read}}

 organization-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.v1/search
  :resource "Organization"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Organization.read" "patient/*.read" "patient/Organization.read"}}

 organization-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.v1/read
  :resource "Organization"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Organization.read" "patient/*.read" "patient/Organization.read"}}

 ;; Practitioner
 practitioner-api
 {:zen/tags #{aidbox.rest/api}
  :GET      practitioner-search
  "_search" {:POST practitioner-search}
  [:id]     {:GET practitioner-read}}

 practitioner-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.v1/search
  :resource "Practitioner"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Practitioner.read" "patient/*.read" "patient/Practitioner.read"}}

 practitioner-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.v1/read
  :resource "Practitioner"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Practitioner.read" "patient/*.read" "patient/Practitioner.read"}}

 ;; Procedure
 procedure-api
 {:zen/tags #{aidbox.rest/api}
  :GET      procedure-search
  "_search" {:POST procedure-search}
  [:id]     {:GET procedure-read}}

 procedure-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.acl/search
  :resource "Procedure"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Procedure.read" "patient/*.read" "patient/Procedure.read"}
  :filter   subject-filter}

 procedure-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.acl/read
  :resource "Procedure"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Procedure.read" "patient/*.read" "patient/Procedure.read"}
  :filter   subject-filter}

 ;; Provenance
 provenance-api
 {:zen/tags #{aidbox.rest/api}
  :GET      provenance-search
  "_search" {:POST provenance-search}
  [:id]     {:GET provenance-read}}

 provenance-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.v1/search
  :resource "Provenance"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Provenance.read" "patient/*.read" "patient/Provenance.read"}}

 provenance-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.v1/read
  :resource "Provenance"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Provenance.read" "patient/*.read" "patient/Provenance.read"}}

 ;; Location
 location-api
 {:zen/tags #{aidbox.rest/api}
  :GET      location-search
  "_search" {:POST location-search}
  [:id]     {:GET location-read}}

 location-search
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Search the resource based on some filter criteria. See documentation at: https://www.hl7.org/fhir/http.html#search"
  :engine   aidbox.rest.v1/search
  :resource "Location"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Location.read" "patient/*.read" "patient/Location.read"}}

 location-read
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/op}
  :zen/desc "Reads the current state of a resource. See documentation at: https://www.hl7.org/fhir/http.html#read"
  :engine   aidbox.rest.v1/read
  :resource "Location"
  :format   "fhir"
  :scope    #{"user/*.read" "user/Location.read" "patient/*.read" "patient/Location.read"}}

 smart-configuration-op
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/public}
  :zen/desc "SMART configuration metadata, including OAuth authorization_endpoint and token_endpoint URLs"
  :engine   aidbox.rest.smart/aidbox-action
  :action   :smart.fhir/smart-configuration}

 capability-op
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/public}
  :zen/desc "Get Authorization Server Metadata"
  :engine   aidbox.rest.smart/aidbox-action
  :action   :smart.fhir/capability}

 style-smart-op
 {:zen/tags #{aidbox.rest/op}
  :zen/desc "EHR’s style parameters can be retrieved"
  :engine   aidbox.rest.v1/static-response
  :body   {:color_background     "#edeae3"
           :color_error          "#9e2d2d"
           :color_highlight      "#69b5ce"
           :color_modal_backdrop ""
           :color_success        "#498e49"
           :color_text           "#303030"
           :dim_border_radius    "6px"
           :dim_font_size        "13px"
           :dim_spacing_size     "20px"
           :font_family_body     "Georgia Times 'Times New Roman' serif"
           :font_family_heading  "'HelveticaNeue-Light' Helvetica Arial 'Lucida Grande' sans-serif;"}}

 ;; FIXME: remove it
 smartbox-ui
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/public}
  :engine   aidbox.rest.smart/aidbox-action
  :action   :box.rest.smart/smartbox-ui}



 }
