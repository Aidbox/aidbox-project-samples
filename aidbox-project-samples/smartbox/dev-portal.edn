{ns smartbox.dev-portal
 import #{aidbox
          aidbox.rest
          smartbox.demo-fixtures
          smartbox.smart-api
          smartbox.bulk-api
          smartbox.documentation
          hl7-fhir-r4-core
          hl7-fhir-us-core
          zenbox}

 test-box
 {:zen/tags #{aidbox/system}
  :services {:http server
             :seed access-policies
             :seed-fixtures smartbox.demo-fixtures/fixtures
             :seed-inferno-clients inferno-clients}}

 box
 {:zen/tags #{aidbox/system}
  :services {:http  server
             :seed  access-policies
             :notification-templates notification-templates}}

 server
 {:zen/tags #{aidbox/service}
  :engine   aidbox/http
  :apis     #{api}}

 access-policies
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed
  :resources [{:id "smart-api"
               :resourceType "AccessPolicy"
               :engine "matcho"
               :matcho {:uri "#/smart/.*"
                        :session {:audience "#.+smart$"}}}
              {:id "inferno-public-endpoints"
               :resourceType "AccessPolicy"
               :engine "matcho"
               :matcho {:uri {:$one-of ["/"
                                        "/documentation"
                                        "/inferno"
                                        "/inferno/create-demo-user"
                                        "/inferno/logout"
                                        "/admin-portal"

                                        "/smart/api"
                                        "/smart/ui" ;; FIXME: remove
                                        "/smart/demo/profile"
                                        "/smart/demo/login"
                                        "/smart-auth/grant"]}}}
              {:id "smart-api-public-endpoints"
               :resourceType "AccessPolicy"
               :engine "matcho"
               :matcho {:uri {:$one-of ["/smart/metadata"
                                        "/smart/.well-known/smart-configuration"
                                        "/smart/style-v1.json"
                                        "/smart-auth/grant"]}}}
              {:id "bulk-api-metadata"
               :resourceType "AccessPolicy"
               :engine "matcho"
               :matcho {:uri "/bulk/metadata"}}
              {:id "bulk-api-redirect"
               :resourceType "AccessPolicy"
               :engine "matcho"
               :matcho {:uri "/bulk/$redirect"}}
              {:id "bulk-api-client-system-all-read"
               :resourceType "AccessPolicy"
               :engine "matcho"
               :matcho {:uri {:$one-of ["#/bulk/Group/.+/\\$export"
                                        "#/bulk/Group/[^/]+$"
                                        "#/bulk/Group"
                                        "#/bulk/\\$export-status/.+"]}
                        :client {:type "bulk"}}}]}

 inferno-clients
 {:zen/tags #{aidbox/service}
  :engine aidbox/seed
  :resources [{:id "inferno-g10-bulk-client"
               :resourceType "Client"
               :auth {:client_credentials {:client_assertion_types ["urn:ietf:params:oauth:client-assertion-type:jwt-bearer"]
                                           :access_token_expiration 300}}
               :scope ["system/*.read"]
               :type "bulk"
               :jwks_uri "https://inferno.healthit.gov/suites/custom/g10_certification/.well-known/jwks.json"
               :grant_types ["client_credentials"]}
              {:id "inferno-g10-client"
               :resourceType "Client"
               :grant_types ["authorization_code" "basic"]
               :auth {:authorization_code
                      {:pkce true
                       :refresh_token true
                       :secret_required true
                       :audience ["https://cmpl-sandbox.aidbox.app/smart"]
                       :redirect_uri "https://inferno.healthit.gov/suites/custom/smart/redirect"
                       :access_token_expiration 300}}
               :smart {:launch_uri "https://inferno.healthit.gov/suites/custom/smart/launch"}
               :secret "inferno-secret"}
              {:id "inferno-g10-public-client"
               :resourceType "Client"
               :auth {:authorization_code
                      {:pkce true
                       :refresh_token true
                       :secret_required false
                       :audience ["https://cmpl-sandbox.aidbox.app/smart"]
                       :redirect_uri "https://inferno.healthit.gov/suites/custom/smart/redirect"
                       :access_token_expiration 300}}
               :smart {:launch_uri "https://inferno.healthit.gov/suites/custom/smart/launch"}
               :grant_types ["authorization_code"
                             "basic"]}]}

 dev-portal-ui
 {:zen/tags #{aidbox.rest/op aidbox.rest.smart/public}
  :engine   aidbox.rest.smart/aidbox-action
  :action   :box.rest.smart/smartbox-ui}

 api
 {:zen/tags #{aidbox.rest/api}

  "smart-auth" {"grant" {:GET smartbox.smart-api/grant-view}}

  :GET dev-portal-ui

  "smart" {:apis #{smartbox.smart-api/smart-api
                   smartbox.smart-api/public-api}}
  "bulk"  {:apis #{smartbox.bulk-api/bulk-api}}}


 notification-templates
 {:zen/tags  #{aidbox/service}
  :engine    aidbox/seed
  :resources {:NotificationTemplate
              {:developer-confirm-email
               {:template
                "<p>Follow the link to verify your email and get started:</p>
                 <a href={{confirm-address}}>Confirm</a>"}}}}

 registration-developer
 {:zen/tags #{zenbox/rpc}
  :params   {:type zen/map
             :keys {:first-name {:type zen/string}
                    :last-name  {:type zen/string}
                    :email      {:type zen/string}
                    :phone      {:type zen/string}
                    :role       {:type zen/string}
                    :org-name   {:type zen/string}
                    :accept-tos {:type zen/string}}}}

 registration-developer-confirm
 {:zen/tags #{zenbox/rpc}
  :params   {:type zen/map
             :keys {:registration-id {:type zen/string}
                    :password-1      {:type zen/string}
                    :password-2      {:type zen/string}}}}
 }
