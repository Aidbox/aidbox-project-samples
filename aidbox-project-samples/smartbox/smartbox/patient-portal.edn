{ns     smartbox.patient-portal
 import #{aidbox
          zenbox}

 seed
 {:zen/tags #{aidbox/service}
  :engine   aidbox/seed
  :resources
  {:AccessPolicy
   {:smartbox-patient-portal-rpc-methods
    {:description  "RPC methods for the patient portal"
     :type         "rpc"
     :engine       "matcho-rpc"
     :rpc
     {:smartbox.patient-portal/get-smart-applications
      {:user {:roles [{:type "patient"}]}}
      :smartbox.patient-portal/revoke-application-grants
      {:user {:roles [{:type "patient"}]}}
      :smartbox.patient-portal/enroll
      {:user {:roles [{:type "patient"}]}}
      :aidbox.smart/get-launch-uri
      {:user {:roles [{:type "patient"}]}}}}
    :smartbox-patient-portal-public-rpc-methods
    {:description "Public RPC methods for the patient portal"
     :engine      "allow-rpc"
     :type        "rpc"
     :rpc         {:smartbox.patient-portal/enroll            true
                   :smartbox.patient-portal/enroll-confirm    true
                   :smartbox.patoent-portal/get-enroll-schema true}}}

   :NotificationTemplate
   {:patient-confirm-email
    {:template
     "<p>Follow the link to verify your email and get started:</p>
      <a href={{confirm-address}}>Confirm</a>"}}}}

 patient-path
 {:zen/tags #{zen/schema zen/tag}
  :zen/desc "Searching for a patient by value in a given path"
  :type     zen/map
  :require  #{:patient-path}
  :keys     {:patient-path {:type  zen/vector
                            :every {:type zen/vector
                                    :every {:type zen/any}}}}}

 user-path
 {:zen/tags #{zen/schema zen/tag}
  :zen/desc "Putting a value in the User resource"
  :type     zen/map
  :require  #{:user-path}
  :keys     {:user-path {:type  zen/vector
                         :every {:type zen/vector
                                 :every {:type zen/any}}}}}

 enroll-first-name
 {:zen/tags     #{zen/schema patient-path user-path}
  :type         zen/string
  :patient-path [[:name :given]]
  :user-path    [[:name :givenName]]}

 enroll-last-name
 {:zen/tags     #{zen/schema patient-path user-path}
  :type         zen/string
  :patient-path [[:name :family]]
  :user-path    [[:name :familyName]]}

 enroll-email
 {:zen/tags     #{zen/schema user-path}
  :type         zen/string
  :user-path    [[:email]]}

 enroll-member-id
 {:zen/tags     #{zen/schema patient-path}
  :type         zen/string
  :patient-path [[:identifier {:type {:coding [{:code "MB"}]}} :value]]}

 get-smart-applications
 {:zen/tags #{zenbox/rpc}}

 get-enroll-schema
 {:zen/tags #{zenbox/rpc}}

 revoke-application-grants
 {:zen/tags #{zenbox/rpc}
  :params   {:type     zen/map
             :require  #{:id}
             :keys     {:id {:type zen/string}}}}

 enroll
 {:zen/tags #{zenbox/rpc}
  :params   {:type     zen/map
             :require  #{:first-name :last-name :email :member-id}
             :keys     {:first-name {:confirms #{enroll-first-name}}
                        :last-name  {:confirms #{enroll-last-name}}
                        :email      {:confirms #{enroll-email}}
                        :member-id  {:confirms #{enroll-member-id}}}}}

 enroll-confirm
 {:zen/tags #{zenbox/rpc}
  :params   {:type    zen/map
             :require #{:registration-id :password-1 :password-2}
             :keys    {:registration-id {:type zen/string}
                       :password-1      {:type zen/string}
                       :password-2      {:type zen/string}}}}}
