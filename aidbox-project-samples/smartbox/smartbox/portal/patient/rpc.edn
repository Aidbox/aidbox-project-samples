{ns     smartbox.portal.patient.rpc
 import #{zenbox}

 get-smart-applications
 {:zen/tags #{zenbox/rpc}}

 get-enroll-schema
 {:zen/tags #{zenbox/rpc}}

 revoke-application-grants
 {:zen/tags #{zenbox/rpc}
  :params   {:type     zen/map
             :require  #{:id}
             :keys     {:id {:type zen/string}}}}

 get-grants
 {:zen/tags #{zenbox/rpc}}

 enroll-confirm
 {:zen/tags #{zenbox/rpc}
  :params   {:type    zen/map
             :require #{:registration-id :password-1 :password-2}
             :keys    {:registration-id {:type zen/string}
                       :password-1      {:type zen/string}
                       :password-2      {:type zen/string}}}}

 ;; TODO: to customization

 patient-path
 {:zen/tags #{zen/schema zen/tag}
  :zen/desc "Searching for a patient by value in a given path"
  :type     zen/map
  :require  #{:patient-path}
  :keys     {:patient-path {:type  zen/vector
                            :every {:type zen/vector
                                    :every {:type zen/any}}}}}

 user-path
 {:zen/tags #{zen/schema zen/tag}
  :zen/desc "Putting a value in the User resource"
  :type     zen/map
  :require  #{:user-path}
  :keys     {:user-path {:type  zen/vector
                         :every {:type zen/vector
                                 :every {:type zen/any}}}}}

 enroll-first-name
 {:zen/tags     #{zen/schema patient-path user-path}
  :type         zen/string
  :patient-path [[:name :given]]
  :user-path    [[:name :givenName]]}

 enroll-last-name
 {:zen/tags     #{zen/schema patient-path user-path}
  :type         zen/string
  :patient-path [[:name :family]]
  :user-path    [[:name :familyName]]}

 enroll-email
 {:zen/tags     #{zen/schema user-path}
  :type         zen/string
  :user-path    [[:email]]}

 enroll-member-id
 {:zen/tags     #{zen/schema patient-path}
  :type         zen/string
  :patient-path [[:identifier {:type {:coding [{:code "MB"}]}} :value]]}

 enroll
 {:zen/tags #{zenbox/rpc}
  :params   {:type     zen/map
             :require  #{:first-name :last-name :email :member-id}
             :keys     {:first-name {:zen/desc "Name"      :confirms #{enroll-first-name}}
                        :last-name  {:zen/desc "Surname"   :confirms #{enroll-last-name}}
                        :email      {:zen/desc "Email"     :confirms #{enroll-email}}
                        :member-id  {:zen/desc "Member ID" :confirms #{enroll-member-id}}}}}}
